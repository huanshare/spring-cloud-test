eureka:
  client:
    serviceUrl:
      defaultZone: http://localhost:8011/eureka/
  healthcheck:
    enabled: true
  instance:
      instance-id: ${spring.application.name}:${spring.cloud.client.ip-address}:${spring.application.instance_id:${server.port}}
      lease-rennewal-interval-in-seconds: 10
      lease-expiration-duration-in-seconds: 30
server:
  port: 8031
spring:
  application:
      name: stream-kafka
  cloud:
    stream:
#      指定用kafka stream来作为默认消息中间件
      default-binder: kafka1
#      kafka:
#        #来自KafkaBinderConfigurationProperties
#        binder:
#          brokers: name87:9094
#          zkNodes: name85:2181,name86:2181,name87:2181/kafka0101
#          #如果需要传递自定义header信息，需要在此处声明，不然自定义消息头是不会出现在最终消息当中的
##          headers: myType
#          configuration:
#            auto:
#              offset:
#                #可以设置原生kafka属性，比如设置新的消费组从最新的offset开始消费
#                reset: latest
      #属性来自BindingProperties
      bindings:
        #与@StreamListener注解中的value一致，是绑定的渠道名
        inputOrder:
          binder: kafka1
          consumer:
            headerMode: raw
          producer:
            headerMode: raw
          #绑定的kafka topic名称为test
          destination: cloud-test10
        input:
          binder: kafka2
          consumer:
            headerMode: raw
          producer:
            headerMode: raw
          #绑定的kafka topic名称为test
          destination: cloud-test11
          #消费组
#          group: cloud-test2-group1
#          content-type: application/json
        inputProductAdd:
          binder: kafka2
          consumer:
            headerMode: raw
          producer:
            headerMode: raw
         #绑定的kafka topic名称为test
          destination: cloud-test12
           #消费组
        # group: cloud-test2-group1
        outputOrder:
          binder: kafka1
          consumer:
            headerMode: raw
          producer:
            headerMode: raw
          destination: cloud-test10
        output:
          binder: kafka2
          consumer:
            headerMode: raw
          producer:
            headerMode: raw
          destination: cloud-test11
        outputProductAdd:
          binder: kafka2
          consumer:
            headerMode: raw
          producer:
            headerMode: raw
          destination: cloud-test12
      binders:
        kafka1:
          type: kafka
          environment:
            spring:
              cloud:
                stream:
                  kafka:
                    binder:
                      brokers: 10.0.21.57:9092
                      zkNodes: 10.0.21.56:2181,10.0.21.57:2181,10.0.21.58:2181/kafkatest0101
        kafka2:
          type: kafka
          environment:
            spring:
              cloud:
                stream:
                  kafka:
                    binder:
                      brokers: 10.0.21.56:9092
                      zkNodes: 10.0.21.56:2181,10.0.21.57:2181,10.0.21.58:2181/kafkatest0101